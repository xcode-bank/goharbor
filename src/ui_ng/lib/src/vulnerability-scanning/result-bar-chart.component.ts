import {
    Component,
    Input,
    Output,
    EventEmitter
} from '@angular/core';
import { VulnerabilitySummary } from '../service/index';
import { SCANNING_STYLES } from './scanning.css';
import { BAR_CHART_COMPONENT_HTML } from './scanning.html';

export enum ScanState {
    COMPLETED, //Scanning work successfully completed
    ERROR,  //Error occurred when scanning
    QUEUED, //Scanning job is queued
    SCANNING, //Scanning in progress
    PENDING, //Scanning not start
    UNKNOWN //Unknown status
}

@Component({
    selector: 'hbr-vulnerability-bar',
    styles: [SCANNING_STYLES],
    template: BAR_CHART_COMPONENT_HTML
})
export class ResultBarChartComponent {
    @Input() tagId: string = "";
    @Input() state: ScanState = ScanState.UNKNOWN;
    @Input() summary: VulnerabilitySummary = {
        total_package: 0,
        package_with_none: 0,
        complete_timestamp: new Date()
    };
    @Output() startScanning: EventEmitter<string> = new EventEmitter<string>();

    constructor() { }

    public get completed(): boolean {
        return this.state === ScanState.COMPLETED;
    }

    public get error(): boolean {
        return this.state === ScanState.ERROR;
    }

    public get queued(): boolean {
        return this.state === ScanState.QUEUED;
    }

    public get scanning(): boolean {
        return this.state === ScanState.SCANNING;
    }

    public get pending(): boolean {
        return this.state === ScanState.PENDING;
    }

    public get unknown(): boolean {
        return this.state === ScanState.UNKNOWN;
    }

    scanNow(): void {
        if (this.tagId && this.tagId !== '') {
            this.startScanning.emit(this.tagId);
        }
    }
}
