// Code generated by mockery v1.0.0. DO NOT EDIT.

package security

import (
	models "github.com/goharbor/harbor/src/common/models"
	mock "github.com/stretchr/testify/mock"

	types "github.com/goharbor/harbor/src/pkg/permission/types"
)

// Context is an autogenerated mock type for the Context type
type Context struct {
	mock.Mock
}

// Can provides a mock function with given fields: action, resource
func (_m *Context) Can(action types.Action, resource types.Resource) bool {
	ret := _m.Called(action, resource)

	var r0 bool
	if rf, ok := ret.Get(0).(func(types.Action, types.Resource) bool); ok {
		r0 = rf(action, resource)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// GetMyProjects provides a mock function with given fields:
func (_m *Context) GetMyProjects() ([]*models.Project, error) {
	ret := _m.Called()

	var r0 []*models.Project
	if rf, ok := ret.Get(0).(func() []*models.Project); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Project)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetProjectRoles provides a mock function with given fields: projectIDOrName
func (_m *Context) GetProjectRoles(projectIDOrName interface{}) []int {
	ret := _m.Called(projectIDOrName)

	var r0 []int
	if rf, ok := ret.Get(0).(func(interface{}) []int); ok {
		r0 = rf(projectIDOrName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]int)
		}
	}

	return r0
}

// GetUsername provides a mock function with given fields:
func (_m *Context) GetUsername() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// IsAuthenticated provides a mock function with given fields:
func (_m *Context) IsAuthenticated() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// IsSolutionUser provides a mock function with given fields:
func (_m *Context) IsSolutionUser() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// IsSysAdmin provides a mock function with given fields:
func (_m *Context) IsSysAdmin() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Name provides a mock function with given fields:
func (_m *Context) Name() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
